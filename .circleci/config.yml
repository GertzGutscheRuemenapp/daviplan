version: 2.1
orbs:
  codecov: codecov/codecov@3.2.4
machine:
  environment:
    DJANGO_SETTINGS_MODULE: datentool.settings_circleci
jobs:
  django testing:
    docker:
      - image: gertzgutscheruemenapp/daviplan:v1.1.1
      - image: gertzgutscheruemenapp/osrm-flask
      - image: circleci/postgres:13-postgis-ram
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout
      - run: mkdir test-reports
      - run:
          name: Resolve Python dependencies
          command: |
            python -m pip install -r requirements.txt
      - run:
          name: Install wget
          command: apt-get install wget
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
      - run:
          name: Wait for Router
          command: dockerize -wait tcp://localhost:8001 -timeout 1m
      - run:
          name: Wait for Database
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Migrate Test Database
          command: |
            python manage.py migrate --settings=datentool.settings_circleci
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
      - run:
          name: Run tests
          command: |
            coverage run --source='.' manage.py test --settings=datentool.settings_circleci
      - store_test_results:
          path: test-reports/
      - run:
          name: Create Coverage Report
          command: coverage json
      - codecov/upload:
          file: '/root/project/coverage.json'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - django testing
